{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Content","styled","div","Input","input","InputGroup","Toolbar","Button","button","App","query","qs","parse","window","location","search","useState","mounted","setMounted","a","b","addresses","setAddresses","contracts","setContracts","setAddress","index","address","newAddresses","fetchContract","useCallback","axios","get","process","response","data","result","length","source","SourceCode","startsWith","slice","JSON","Object","entries","sources","reduce","acc","name","contract","content","newContracts","history","replaceState","stringify","alert","useEffect","onChange","e","target","value","placeholder","onClick","height","defaultLanguage","defaultValue","original","modified","theme","modifiedLanguage","originalLanguage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.363a561b.chunk.js","sourcesContent":["import { DiffEditor } from \"@monaco-editor/react\";\nimport axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport qs from 'query-string';\n\nconst Content = styled.div`\n  background: #1b1b1b;\n`\n\nconst Input = styled.input`\n  height: 33px;\n  padding: 0px 10px;\n  border: none;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  outline: none;\n  background: transparent;\n  color: #d4d4d4;\n  width: 330px;\n  border: 1px solid #d4d4d4;\n` \n\nconst InputGroup = styled.div`\n  margin-right: 30px;\n`\n\nconst Toolbar = styled.div`\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  padding: 5px 0px;\n`\n\nconst Button = styled.button`\n  height: 35px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: none;\n  outline: none;\n  border-left: 1px solid #d4d4d4;\n  padding: 0px 15px;\n  cursor: pointer;\n  background: #3498db;\n  color: white;\n\n  &:hover {\n    background: #2980b9;\n  }\n`\n\nfunction App() {\n  const query = qs.parse(window.location.search);\n\n  const [mounted, setMounted] = useState(false);\n  const [addresses, setAddresses] = useState([query.a ?? '', query.b ?? '']);\n  const [contracts, setContracts] = useState([null, null]);\n\n  const setAddress = (index, address) => {\n    const newAddresses = [...addresses];\n    newAddresses[index] = address;\n    setAddresses(newAddresses);\n  }\n\n  const fetchContract = useCallback(async index => {\n    let response = await axios.get(`https://api.bscscan.com/api?module=contract&action=getsourcecode&address=${addresses[index]}&apikey=${process.env.REACT_APP_BSC_SCAN_API_KEY}`);\n    if (response?.data?.result.length) {\n      let source;\n\n      source = response?.data?.result[0].SourceCode;\n\n      if (source) {\n        if (source.startsWith('{')) {\n          source = source.slice(1).slice(0, -1);\n          source = JSON.parse(source);\n          source = Object.entries(source.sources).reduce((acc, [name, contract]) => acc + `\\r\\n ${name} \\r\\n` + contract.content, \"\");\n        }\n\n        const newContracts = [...contracts];\n        newContracts[index] = source;\n        setContracts(newContracts);\n\n        const query = {\n          a: addresses[0],\n          b: addresses[1]\n        }\n\n        window.history.replaceState(`Diff ${query.a} - ${query.b}`, `Diff ${query.a} - ${query.b}`, `/contract-comparer?${qs.stringify(query)}`);\n      } else {\n        alert('Invalid address specified')\n      }\n    } else {\n      alert('The specified contract could not be fetched')\n    }\n  }, [addresses, contracts])\n  \n  useEffect(() => {\n    if (!mounted) {\n      if (addresses[0])\n        fetchContract(0)\n      if (addresses[1])\n        fetchContract(1)\n\n      setMounted(true);\n    }\n  }, [mounted, addresses, fetchContract]);\n\n  return  (\n    <Content>\n      <Toolbar>\n        <InputGroup>\n          <Input onChange={e => setAddress(0, e.target.value)} value={addresses[0]} placeholder=\"Enter address\" />\n          <Button onClick={() => fetchContract(0)}>Fetch</Button>\n        </InputGroup>\n        <InputGroup>\n          <Input onChange={e => setAddress(1, e.target.value)} value={addresses[1]} placeholder=\"Enter address\" />\n          <Button onClick={() => fetchContract(1)}>Fetch</Button>\n        </InputGroup>\n      </Toolbar>\n      <DiffEditor\n        height=\"calc(100vh - 50px)\"\n        defaultLanguage=\"javascript\"\n        defaultValue=\"// some comment\"\n        original={contracts[0]}\n        modified={contracts[1]}\n        theme=\"vs-dark\"\n        modifiedLanguage=\"sol\"\n        originalLanguage=\"sol\"\n      />\n    </Content>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}